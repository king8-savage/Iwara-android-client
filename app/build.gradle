apply plugin: 'com.android.application'
if (file('google-services.json').exists()) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

static def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

static def gitVersionTag(boolean isPattern) {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    if (isPattern){
        def pattern = "-(\\d+)-g"
        def matcher = version =~ pattern

        if (matcher) {
            version = version.substring(0, matcher.start()) + "." + matcher[0][1]
        } else {
            version = version + ".0"
        }
    }

    return version
}

static def time(){
    return new Date().format('yyyyMMddHHmm',TimeZone.getDefault())
}

task switchToDebug(type: Copy) {
    description = 'Switches to DEBUG google-services.json'
    from "src/debug"
    include "google-services.json"
    into "."
}

task switchToRelease(type: Copy) {
    description = 'Switches to RELEASE google-services.json'
    from "src/release"
    include "google-services.json"
    into "."
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zhkrb.iwara"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "0.0.4"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            // 为了不和 release 版本冲突
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    applicationVariants.all{ variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each { output ->
                output.versionNameOverride = gitVersionTag(true)
                output.versionCodeOverride = gitVersionCode()
                output.outputFileName = "iwara_${variant.buildType.name}_${defaultConfig.versionCode}_${time()}.apk"
            }
        }else if (variant.buildType.name == 'debug') {
            variant.outputs.each { output ->
                output.versionNameOverride = gitVersionTag(false)+'-debug'
                output.versionCodeOverride = gitVersionCode()
            }
        }
    }

    afterEvaluate {
        if (file('google-services.json').exists()) {
            processDebugGoogleServices.dependsOn switchToDebug
            processReleaseGoogleServices.dependsOn switchToRelease
        }
    }

}

repositories {
    flatDir {
        dirs 'libs', '../libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation('androidx.appcompat:appcompat:1.0.0')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    implementation 'com.alibaba:fastjson:1.2.58'

    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.7'


    implementation 'org.jsoup:jsoup:1.12.1'
    api project(':dragvideo')
    api project(':dialog')
    api project(':resourseLib')

    // Firebase
    implementation 'com.google.firebase:firebase-core:18.0.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'

    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'

    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    //refresh
    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.1'
    implementation  'com.scwang.smart:refresh-header-classics:2.0.1'
}
